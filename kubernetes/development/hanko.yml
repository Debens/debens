---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: hanko-data
    namespace: dev
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
    name: hanko
    namespace: dev
spec:
    selector:
        app: hanko
    ports:
        - port: 80
          targetPort: public
          protocol: TCP
          name: http
---
apiVersion: v1
kind: Service
metadata:
    name: hanko-admin
    namespace: dev
spec:
    selector:
        app: hanko
    ports:
        - port: 80
          targetPort: admin
          protocol: TCP
          name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: hanko
    namespace: dev
    labels:
        app: hanko
spec:
    replicas: 1
    selector:
        matchLabels:
            app: hanko
    template:
        metadata:
            name: hanko
            labels:
                app: hanko
        spec:
            containers:
                - name: hanko
                  image: debens/hanko:latest
                  command:
                      - "/hanko"
                  args:
                      - "serve"
                      - "all"
                      - "--config"
                      - "/etc/config/config.yaml"
                  ports:
                      - containerPort: 8000
                        name: public
                      - containerPort: 8001
                        name: admin
                  livenessProbe:
                      httpGet:
                          path: /health/alive
                          port: 8000
                      initialDelaySeconds: 120
                      periodSeconds: 20
                  readinessProbe:
                      httpGet:
                          path: /health/ready
                          port: 8000
                      initialDelaySeconds: 120
                      periodSeconds: 20
                  volumeMounts:
                      - name: config
                        mountPath: /etc/config/config.yaml
                        subPath: config.yml
            initContainers:
                - name: hanko-db-migrations
                  image: debens/hanko:latest
                  command:
                      - "/hanko"
                  args:
                      - "--config"
                      - "/etc/config/config.yaml"
                      - "migrate"
                      - "up"
                  volumeMounts:
                      - name: config
                        mountPath: /etc/config/config.yaml
                        subPath: config.yml
            volumes:
                - name: config
                  secret:
                      secretName: hanko-config
---
apiVersion: v1
kind: Service
metadata:
    name: hanko-db
    namespace: dev
spec:
    selector:
        app: hanko-db
    ports:
        - port: 5432
          name: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: hanko-db
    namespace: dev
    labels:
        app: hanko-db
spec:
    replicas: 1
    selector:
        matchLabels:
            app: hanko-db
    template:
        metadata:
            name: hanko-db
            labels:
                app: hanko-db
        spec:
            containers:
                - name: hanko-db
                  image: postgres:12-alpine
                  ports:
                      - containerPort: 5432
                  volumeMounts:
                      - mountPath: /var/lib/postgresql/data
                        name: storage
                  env:
                      - name: POSTGRES_USER
                        value: hanko
                      - name: POSTGRES_PASSWORD
                        value: hanko
                      - name: POSTGRES_DB
                        value: hanko
                  readinessProbe:
                      exec:
                          command:
                              [
                                  "psql",
                                  "-w",
                                  "-U",
                                  "hanko",
                                  "-d",
                                  "hanko",
                                  "-c",
                                  "SELECT 1",
                              ]
                      initialDelaySeconds: 15
                      timeoutSeconds: 2
                  livenessProbe:
                      exec:
                          command:
                              [
                                  "psql",
                                  "-w",
                                  "-U",
                                  "hanko",
                                  "-d",
                                  "hanko",
                                  "-c",
                                  "SELECT 1",
                              ]
                      initialDelaySeconds: 45
                      timeoutSeconds: 2
            volumes:
                - name: storage
                  persistentVolumeClaim:
                      claimName: hanko-data
